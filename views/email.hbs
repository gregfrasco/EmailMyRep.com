<script>
$(function () {
  $('.list-group.checked-list-box .list-group-item').each(function () {

    // Settings
    var $widget = $(this),
    $checkbox = $('<input type="checkbox" class="hidden" />'),
    color = ($widget.data('color') ? $widget.data('color') : "primary"),
    style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
    settings = {
      on: {
        icon: 'glyphicon glyphicon-check'
      },
      off: {
        icon: 'glyphicon glyphicon-unchecked'
      }
    };

    $widget.css('cursor', 'pointer')
    $widget.append($checkbox);

    // Event Handlers
    $widget.on('click', function () {
      $checkbox.prop('checked', !$checkbox.is(':checked'));
      $checkbox.triggerHandler('change');
      updateDisplay();
    });
    $checkbox.on('change', function () {
      updateDisplay();
    });


    // Actions
    function updateDisplay() {
      var isChecked = $checkbox.is(':checked');

      // Set the button's state
      $widget.data('state', (isChecked) ? "on" : "off");

      // Set the button's icon
      $widget.find('.state-icon')
      .removeClass()
      .addClass('state-icon ' + settings[$widget.data('state')].icon);

      // Update the button's color
      if (isChecked) {
        $widget.addClass(style + color + ' active');
      } else {
        $widget.removeClass(style + color + ' active');
      }
    }

    // Initialization
    function init() {

      if ($widget.data('checked') == true) {
        $checkbox.prop('checked', !$checkbox.is(':checked'));
      }

      updateDisplay();

      // Inject the icon if applicable
      if ($widget.find('.state-icon').length == 0) {
        $widget.prepend('<span class="state-icon ' + settings[$widget.data('state')].icon + '"></span>');
      }
    }
    init();
  });

  $('#get-checked-data').on('click', function(event) {
    event.preventDefault();
    var checkedItems = {}, counter = 0;
    $("#check-list-box li.active").each(function(idx, li) {
      checkedItems[counter] = $(li).text();
      counter++;
    });
    $('#display-json').html(JSON.stringify(checkedItems, null, '\t'));
  });
});
</script>
<script src="https://www.google.com/recaptcha/api.js"></script>
<style>
/* CSS REQUIRED */
.state-icon {
  left: -5px;
}
.list-group-item-primary {
  color: rgb(255, 255, 255);
  background-color: rgb(66, 139, 202);
}
</style>
<div class="container">
  <form method="POST" action="/email" name="emailForm">
    <input type="hidden" name="_csrf" value="{{_csrf}}"/>
    <div class="row">
      <div class="col-md-6">
        <h1>Write an Email</h1>
      </div>
      <div class="col-md-4">
        <div class="col-md-1 g-recaptcha" data-sitekey="6LehCRwTAAAAAA1BuVP_g8AXHu1TEPX9iSRT6ae2"></div>
      </div>
      <div class="col-md-2">
        <button type="submit" class="btn btn-primary btn-block">Send</button>
      </div>
    </div>
    <div class="row">
      <hr />
      <!-- EMAIL -->
      <div class="col-md-6">
        <div class="form-group">
          <label for="subject">Subject</label>
          <input id="subject" name="subject" type="text" class="form-control" value="{{topic.title}}" placeholder="Subject">
        </div>
        <div class="form-group">
          <label for="message">Message</label>
          <textarea id="message" name="message" class="form-control" rows="20" cols="30" placeholder="Message" value="{{template.template}}" style="resize: vertical"></textarea>
        </div>
      </div>
      <!-- repsetivies -->
      <div class="col-md-6">
        <label for="Reps">Representatives with email addresses</label>
        <div class="well" style="max-height: 300px;overflow: auto;">
          <ul class="nav">
            {{#each reps}}
            {{#if this.email}}
            <li>
              {{#if this.photoUrl}}
              <div class="row">
                <span class="button-checkbox">
                  <button type="button" class="btn col-md-12" data-color="primary">
                    <div class="col-md-3">
                      <img src="{{this.photoUrl}}" class="img-circle img-responsive" style="width:75px;height:75px;object-fit: cover;"/>
                    </div>
                    <div class="col-md-8">
                      <h3>{{this.name}}</h3>
                      {{this.role}}
                    </div>
                  </button>
                  <input type="checkbox" name="emails" value="{{this.email}}" class="hidden" />
                </span>
              </div>
              {{else}}
              <div class="row">
                <span class="button-checkbox">
                  <button type="button" class="btn col-md-12" data-color="primary">
                    <div class="col-md-3">
                      <img src="images/default-avatar.jpg" class="img-circle img-responsive" style="width:75px;height:75px;object-fit: cover;"/>
                    </div>
                    <div class="col-md-8">
                      <h3>{{this.name}}</h3>
                      {{this.role}}
                    </div>
                  </button>
                  <input type="checkbox" name="emails" value="{{this.email}}" class="hidden" />
                </span>
              </div>
              {{/if}}
            </li>
            {{/if}}
            {{/each}}
          </ul>
        </div>
        <label for="Reps">Representatives without emails addresses</label>
        <div class="well" style="max-height: 300px;overflow: auto;">
          <ul class="list-group">
            {{#each reps}}
            {{#if this.email}}
            {{else}}
            <li class="list-group-item">
              {{#if this.photoUrl}}
              <div class="row">
                <div class="col-md-3">
                  <img src="{{this.photoUrl}}" class="img-circle img-responsive" style="width:75px;height:75px;object-fit: cover;"/>
                </div>
                <div class="col-md-9">
                  <h3>{{this.name}}</h3>
                  {{this.role}}
                  {{#if this.website}}
                  <br />Contact them on: <a href="{{this.website}}">{{this.website}}</a>
                  {{/if}}
                </div>
              </div>
              {{else}}
              <div class="row">
                <div class="col-md-3">
                  <img src="images/default-avatar.jpg" class="img-circle img-responsive" style="width:75px;height:75px;object-fit: cover;"/>
                </div>
                <div class="col-md-9">
                  <h2>{{this.name}}</h2>
                  {{this.role}}
                  {{#if this.website}}
                  <br />Contact them on: <a href="{{this.website}}">{{this.website}}</a>
                  {{/if}}
                </div>
              </div>
              {{/if}}
            </li>
            {{/if}}
            {{/each}}
          </ul>
        </div>
      </div>
    </div>
  </form>
  <script>
  $(function () {
    $('.button-checkbox').each(function () {

      // Settings
      var $widget = $(this),
      $button = $widget.find('button'),
      $checkbox = $widget.find('input:checkbox'),
      color = $button.data('color'),
      settings = {
        on: {
          icon: 'glyphicon glyphicon-check'
        },
        off: {
          icon: 'glyphicon glyphicon-unchecked'
        }
      };

      // Event Handlers
      $button.on('click', function () {
        $checkbox.prop('checked', !$checkbox.is(':checked'));
        $checkbox.triggerHandler('change');
        updateDisplay();
      });
      $checkbox.on('change', function () {
        updateDisplay();
      });

      // Actions
      function updateDisplay() {
        var isChecked = $checkbox.is(':checked');

        // Set the button's state
        $button.data('state', (isChecked) ? "on" : "off");

        // Set the button's icon
        $button.find('.state-icon')
        .removeClass()
        .addClass('state-icon ' + settings[$button.data('state')].icon);

        // Update the button's color
        if (isChecked) {
          $button
          .removeClass('btn-default')
          .addClass('btn-' + color + ' active');
        }
        else {
          $button
          .removeClass('btn-' + color + ' active')
          .addClass('btn-default');
        }
      }

      // Initialization
      function init() {

        updateDisplay();

        // Inject the icon if applicable
        if ($button.find('.state-icon').length == 0) {
          $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i>Â ');
        }
      }
      init();
    });
  });
  </script>
</div>
